import org.apache.tools.ant.filters.*

plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'application' //plugins the lifecycle task (application include id 'java')
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
def activeProfile = project.properties['activeProfile']?:'k8s'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis' //SpringBoot to Redis:(1)build.gradle (2)RedisCtrl
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

processResources {
	logger.error('Got active profile [{}]', activeProfile)
	filter ReplaceTokens, tokens: [activeProfile: activeProfile]
	//2. Gradle build: application.properties: local or k8s
	//(1)src>main>resources>application.properties => Line1: spring.profiles.active=@activeProfile@
	//(2)build.gradle => Add Code:
    //   (a) def activeProfile = project.properties['activeProfile']?:'k8s' //default = k8s
    //   (b) processResources { filter ReplaceTokens, tokens: [activeProfile: activeProfile] }
	//(3)gradle clean build -PactiveProfile=local or k8s
	//(4)build>resources>main>application.properties => Line1: spring.profiles.active=local or k8s
}